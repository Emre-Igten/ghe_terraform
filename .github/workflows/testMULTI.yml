name: Clone from Azure DevOps and Push to GitHub (MULTI)

on:
  workflow_dispatch:
  # push:
  #   branches:
  #    - main

jobs:
  # Stap 1: Team Creatie (Wordt één keer uitgevoerd)
  create-teams:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout this repository
        uses: actions/checkout@v4

      - name: Set up Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Set GitHub Token
        run: echo "GITHUB_TOKEN=${{ secrets.ADMIN_PAT }}" >> $GITHUB_ENV

      - name: Set Org
        run: |
          echo "GITHUB_OWNER=emre-poc" >> $GITHUB_ENV

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        run: terraform init

      - name: Terraform Create Teams
        run: |
          terraform plan -out=tfplan -target="module.create-team" -target="module.create-team2" -target="module.create-team3"

      - name: Terraform Apply Team Creation
        run: |
          terraform apply "tfplan"

  # Stap 2: Per Repository Acties (Via Matrix)
  clone-and-push:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        repo_name: 
          - bpPOC
          - bpPOC2
          - bpPOC3
          - bpPOC4
          - bpPOC5

    needs: create-teams  # Wacht tot de teams zijn aangemaakt voordat deze job begint.

    steps:
      - name: Checkout this repository
        uses: actions/checkout@v4

      - name: Set up Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Set GitHub Token
        run: echo "GITHUB_TOKEN=${{ secrets.ADMIN_PAT }}" >> $GITHUB_ENV

      - name: Set Org
        run: |
          echo "GITHUB_OWNER=emre-poc" >> $GITHUB_ENV

      - name: Clone Azure DevOps repository
        env:
          AZURE_DEVOPS_PAT: ${{ secrets.AZURE_DEVOPS_PAT }}
        run: |
          git clone https://defoortd:${{ secrets.AZURE_DEVOPS_PAT }}@dev.azure.com/defoortd/bachelorproef%20Emre/_git/bachelorproef%20Emre ${{ matrix.repo_name }}

      - name: Create GitHub repository in organization
        env:
          GITHUB_PAT: ${{ secrets.ADMIN_PAT }}
        run: |
          curl -X POST -H "Authorization: token ${{ secrets.ADMIN_PAT }}" \
            -H "Accept: application/vnd.github.v3+json" \
            -d '{"name":"${{ matrix.repo_name }}","private":false}' \
            https://api.github.com/orgs/${{ env.GITHUB_OWNER }}/repos || echo "Repository creation failed or already exists"

      - name: Push to GitHub repository
        env:
          GITHUB_PAT: ${{ secrets.ADMIN_PAT }}
        run: |
          cd ${{ matrix.repo_name }}
          git remote add github https://github.com/${{ env.GITHUB_OWNER }}/${{ matrix.repo_name }}.git
          git push https://x-access-token:${{ secrets.ADMIN_PAT }}@github.com/${{ env.GITHUB_OWNER }}/${{ matrix.repo_name }}.git main

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        run: terraform init

      - name: Terraform Apply for repository
        env:
          REPO_NAME: ${{ matrix.repo_name }}
        run: |
          terraform plan -out=tfplan -var="repo_name=${{ env.REPO_NAME }}" -target="module.add-team-memberadmin" -target="module.add-team-membertester" -target="module.add-team-memberdeveloper" -target="module.add-team-repository-permissionsadmins" -target="module.add-team-repository-permissionstesters" -target="module.add-team-repository-permissionsdevs" -target="module.add-branch-protection"
          
      - name: Apply Terraform
        run: terraform apply "tfplan"
